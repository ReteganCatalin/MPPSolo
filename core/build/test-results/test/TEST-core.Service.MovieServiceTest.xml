<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="core.Service.MovieServiceTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2020-06-02T06:55:51" hostname="DESKTOP-7LUL0AF" time="0.346">
  <properties/>
  <testcase name="deleteClient" classname="core.Service.MovieServiceTest" time="0.028"/>
  <testcase name="findAll" classname="core.Service.MovieServiceTest" time="0.067"/>
  <testcase name="updateMovie" classname="core.Service.MovieServiceTest" time="0.196"/>
  <testcase name="createMovie" classname="core.Service.MovieServiceTest" time="0.043"/>
  <system-out><![CDATA[Hibernate: select movie0_.id as id1_2_0_, movie0_.director as director2_2_0_, movie0_.genre as genre3_2_0_, movie0_.mainstar as mainstar4_2_0_, movie0_.title as title5_2_0_, movie0_.yearofrelease as yearofre6_2_0_ from movie movie0_ where movie0_.id=?
Hibernate: select movie0_.id as id1_2_0_, movie0_.director as director2_2_0_, movie0_.genre as genre3_2_0_, movie0_.mainstar as mainstar4_2_0_, movie0_.title as title5_2_0_, movie0_.yearofrelease as yearofre6_2_0_ from movie movie0_ where movie0_.id=?
Hibernate: select movie0_.id as id1_2_0_, movie0_.director as director2_2_0_, movie0_.genre as genre3_2_0_, movie0_.mainstar as mainstar4_2_0_, movie0_.title as title5_2_0_, movie0_.yearofrelease as yearofre6_2_0_ from movie movie0_ where movie0_.id=?
Hibernate: select rentals0_.movieid as movieid6_3_0_, rentals0_.id as id1_3_0_, rentals0_.id as id1_3_1_, rentals0_.clientid as clientid5_3_1_, rentals0_.day as day2_3_1_, rentals0_.month as month3_3_1_, rentals0_.movieid as movieid6_3_1_, rentals0_.year as year4_3_1_ from rental rentals0_ where rentals0_.movieid=?
Hibernate: delete from movie where id=?
Hibernate: select movie0_.id as id1_2_, movie0_.director as director2_2_, movie0_.genre as genre3_2_, movie0_.mainstar as mainstar4_2_, movie0_.title as title5_2_, movie0_.yearofrelease as yearofre6_2_ from movie movie0_
Hibernate: select movie0_.id as id1_2_, movie0_.director as director2_2_, movie0_.genre as genre3_2_, movie0_.mainstar as mainstar4_2_, movie0_.title as title5_2_, movie0_.yearofrelease as yearofre6_2_ from movie movie0_
Hibernate: select movie0_.id as id1_2_0_, movie0_.director as director2_2_0_, movie0_.genre as genre3_2_0_, movie0_.mainstar as mainstar4_2_0_, movie0_.title as title5_2_0_, movie0_.yearofrelease as yearofre6_2_0_ from movie movie0_ where movie0_.id=?
Hibernate: update movie set director=?, genre=?, mainstar=?, title=?, yearofrelease=? where id=?
Hibernate: select movie0_.id as id1_2_, movie0_.director as director2_2_, movie0_.genre as genre3_2_, movie0_.mainstar as mainstar4_2_, movie0_.title as title5_2_, movie0_.yearofrelease as yearofre6_2_ from movie movie0_
Hibernate: select movie0_.id as id1_2_0_, movie0_.director as director2_2_0_, movie0_.genre as genre3_2_0_, movie0_.mainstar as mainstar4_2_0_, movie0_.title as title5_2_0_, movie0_.yearofrelease as yearofre6_2_0_ from movie movie0_ where movie0_.id=?
Hibernate: select movie0_.id as id1_2_1_, movie0_.director as director2_2_1_, movie0_.genre as genre3_2_1_, movie0_.mainstar as mainstar4_2_1_, movie0_.title as title5_2_1_, movie0_.yearofrelease as yearofre6_2_1_, rentals1_.movieid as movieid6_3_3_, rentals1_.id as id1_3_3_, rentals1_.id as id1_3_0_, rentals1_.clientid as clientid5_3_0_, rentals1_.day as day2_3_0_, rentals1_.month as month3_3_0_, rentals1_.movieid as movieid6_3_0_, rentals1_.year as year4_3_0_ from movie movie0_ left outer join rental rentals1_ on movie0_.id=rentals1_.movieid where movie0_.id=?
Hibernate: insert into movie (id, director, genre, mainstar, title, yearofrelease) values (null, ?, ?, ?, ?, ?)
Hibernate: select movie0_.id as id1_2_, movie0_.director as director2_2_, movie0_.genre as genre3_2_, movie0_.mainstar as mainstar4_2_, movie0_.title as title5_2_, movie0_.yearofrelease as yearofre6_2_ from movie movie0_
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
